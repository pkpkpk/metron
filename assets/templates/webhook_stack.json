{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description":"",

  "Parameters" : {
    "InstanceId" : {
      "Description" : "Existing MetronInstance instance-id",
      "Type" : "String"
    },
    "WebhookSrc": {"Type" : "String"},
    "WebhookSecret": {"Type": "String"}
  },
  "Outputs" : {
    "InstanceId" : {
      "Value" : { "Ref" : "InstanceId" }
    },
    "WebhookUrl" : {
      "Description" : "Public http endpoint for github to call",
      "Value" : { "Fn::GetAtt" : [ "WebhookUrl", "FunctionUrl" ] }
    },
    "WebhookSecret": {"Value" : {"Ref" : "WebhookSecret"}},
    "WebhookLambda": {"Value" : {"Ref" : "WebhookLambda"}}
  },

  "Resources" : {
    "WebhookExecutionRole" : {
      "Type" : "AWS::IAM::Role",
      "Properties": {
        "RoleName" : "metron_webhook_execution_role",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
              {
                  "Effect": "Allow",
                  "Principal": {
                      "Service": "lambda.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
              }
          ]
        },
        "Policies": [{
          "PolicyName" : "metron_lambda_resource_policy",
          "PolicyDocument":{
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Sid": "VisualEditor0",
                    "Effect": "Allow",
                    "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:PutLogEvents"
                    ],
                    "Resource": "arn:aws:logs:*:*:*"
                },
                {
                    "Sid": "VisualEditor1",
                    "Effect": "Allow",
                    "Action": [
                        "ssm:SendCommand",
                        "ssm:TerminateSession",
                        "ssm:StartSession",
                        "ssm:ResumeSession",
                        "ssm:GetCommandInvocation",
                        "ssm:DescribeSessions",
                        "ec2:*"
                    ],
                    "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "WebhookLambda" : {
      "DependsOn": ["WebhookExecutionRole"],
      "Type" : "AWS::Lambda::Function",
      "Properties" : {
        "FunctionName": "metron_webhook_lambda",
        "Handler": "index.handler",
        "Role": { "Fn::GetAtt" : ["WebhookExecutionRole", "Arn"] },
        "Code": { "ZipFile": {"Ref": "WebhookSrc"}},
        "Runtime": "nodejs18.x",
        "Timeout": 500,
        "Environment" : {
          "Variables" : {
            "WEBHOOK_SECRET" : { "Ref" : "WebhookSecret" },
            "REGION" : { "Ref" : "AWS::Region" },
            "INSTANCE_ID" : {"Ref" : "InstanceId"},
            "SHOULD_SHUTDOWN_INSTANCE" : false
          }
        }
      }
    },
    "WebhookPermission": {
      "DependsOn" : ["WebhookLambda"],
      "Type" : "AWS::Lambda::Permission",
      "Properties" : {
        "Action" : "lambda:InvokeFunctionUrl",
        "Principal" : "*",
        "FunctionName" : "metron_webhook_lambda",
        "FunctionUrlAuthType" : "NONE"
      }
    },
    "WebhookUrl": {
      "DependsOn" : ["WebhookLambda"],
      "Type" : "AWS::Lambda::Url",
      "Properties" : {
        "AuthType" : "NONE",
        "TargetFunctionArn" : {"Ref":"WebhookLambda"}
      }
    }
  }
}
